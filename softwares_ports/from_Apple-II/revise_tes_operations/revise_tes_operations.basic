100 REM === GAME INIT ===

110 CLEAR: REM CLEAR PROGRAM MEMORY FOR A FRESH START
120 PRINT CHR$(7): REM BEEP TO SAY HELLO

200 REM --- STATIC GAME PARAMS ---

210 LET OP$ = "/": REM DEFAULT OPERATOR (OTHERS ARE "+", "-", "x")

220 LET MS = 100: REM MAXIMUM NUMBERS OF STEPS PER GAME;
230 LET SW = 280/MS: REM STEP BASE PLOT WIDTH

310 LET MA = 12: REM MAXIMUM OPERAND VALUE (EXCEPT NUMERATORS)
320 LET MI = -12: REM MINIMUM OPERAND VALUE (EXCEPT NUMERATORS)
330 LET DP = 1: REM DECIMAL PRECISION IN NUMBER OF DIGITS AFTER SEPARATOR
340 LET PM = 100: REM UP OR DOWN RANGE OF POINTS FOR WINNING OR LOOSING
350 LET WP = 5: REM MAX AMOUNT OF POINTS WON PER SUCCESS
360 LET LP = 20: REM MAX AMOUNT OF POINTS LOST PER FAIL
370 LET DA = 5: REM MAX DELAY BEFORE FAIL IN APPROXIMATED SECONDS
380 LET DL = 5250: REM APPROXIMATE GAME LOOP FREQUENCY EN Hz

500 REM --- GAME VARIABLES ---

520 LET GW = 0: REM TOTAL GAME WINS
530 LET GD = 0: REM TOTAL GAME DEFEATS
540 LET AG = 0: REM CURRENT NUMBER OF GOOD ANSWERS IN THIS GAME
550 LET AW = 0: REM CURRENT NUMBER OF FAILS IN THIS GAME 
560 LET UA$ = "": REM CURRENT USER ANSWER
570 LET R1 = 0: REM CURRENT RANDOM FIRST OPERAND
580 LET R2 = 0: REM CURRENT RANDOM SECOND OPERAND 
590 LET CR = 0: REM CURRENT COMPUTED RESULT

600 DIM PT(MS): REM AMOUNT OF POINTS PER STEP
610 LET ST = 0: REM STEP INDEX

900 REM --- LOCAL AND DUMMY VARIABLES COMPENSATING LANGUAGE FLAWS ---
910 LET IT = 0: REM DUMMY VARIABLE FOR RND RESEED AND SIMILAR EPHEMERE USES
920 LET A$ = "": REM DUMMY INPUT VALUE FOR WAIT-FOR-ANY-KEY FALSE GET
930 LET I = 0: REM FIRST LEVEL LOOP INTERNAL COUNTER


1000 REM === HEADER DISPLAY ===

1010 TEXT:PR#3:HOME: REM TEXT MODE
1020 PRINT:PRINT:PRINT TAB(32);"REVISE TES TABLES":PRINT
1030 PRINT TAB(16);"ORIGINAL CREATION FROM PIERRE JOLY, AROUND 1990"
1040 PRINT TAB(21);"REFACTORED BY MARC PHILIPPE JOLY, 2021"
1050 PRINT: PRINT: PRINT

2000 REM === GAME INIT ===

2100 REM --- REINITIALISATION DES POINTS ---
2110 ST = 0: REM BEFORE FIRST STEP INDEX
2120 PT(0) = 0: PT(1)=0: REM BEFORE FIRST STEP STATE
2130 AW = 0
2140 AR = 0


2200 REM --- GAME CONFIG ---
2220 PRINT "VEUX-TU REVISER LES ADDITIONS ? ([O]UI OU NON)":GET A$
2230 IF A$ = "O" THEN OP$ = "+": GOTO 4000
2240 PRINT "VEUX-TU REVISER LES SOUSTRACTIONS ? ([O]UI OU NON)":GET A$
2250 IF A$ = "O" THEN OP$ = "-": GOTO 4000
2260 PRINT "VEUX-TU REVISER LES MULTIPLICATIONS ? ([O]UI OU NON)":GET A$
2270 IF A$ = "O" THEN OP$ = "x": GOTO 4000
2280 PRINT "BON ET BIEN DANS CE CAS TU VAS REVISER LES DIVISIONS."
2290 OP$ = "/": GOTO 4000

4000 REM -- GAME STARTING BLOCK ---
4010 GOSUB 10300: REM PLOT STATE
4020 GOSUB 10100: REM REPOSITION PRINT CURSOR UNDER PLOT ZONE
4030 PRINT TAB(30);"OPERATEUR REVISE: ";OP$
4040 PRINT "PRET ?":PRINT
4050 PRINT TAB(27)"(APPUYER SUR N'IMPORTE QUELLE TOUCHE POUR COMMENCER)";
4060 GET A$: REM WAIT FOR ANY KEY PRESS
4070 IT = RND(-1*(PEEK(78)+256*PEEK(79))): REM SEED RND USING PREVIOUS KEYPRESS

4100 GOSUB 12100: REM GENERATE NEW ENIGMA


5000 REM === REAL-TIME MAIN LOOP ===

5010 K = PEEK(49152): IF K<128 THEN 5010: REM READ DIGIT ENTRY (NON-BLOCKING)
5020 POKE 49168,0: REM CLEAR KEYBOARD ENTRY
5030 IF K=141 THEN GOSUB 11100: REM SUBMIT ANSWER
5040 IF K=170 THEN GOSUB 11200: REM INVERT SIGN 
5050 IF K=171 OR K=221 THEN GOSUB 11300: REM TURN POSITIVE 
5060 IF K=173 OR K=175 THEN GOSUB 11400: REM TURN NEGATIVE 
5070 IF K=174 OR K=205 THEN GOSUB 11500: REM APPEND DECIMAL SEPARATOR
5080 IF K>175 AND K<186 THEN GOSUB 11600: REM APPEND DIGIT
5090 IF K=255 THEN GOSUB 11700: REM REMOVE LAST CHAR
5100 GOTO 5000: REM KEEP LISTENING TO INPUTS


6000 REM === GAME OVER ===

3010 GOSUB 10100: REM CLEAR TEXT DISPLAY UNDER PLOT ZONE
6020 PRINT "  APRES ";AG;" REPONSES CORRECTES ET ";AW;" REPONSES ERRONEES... ";
6030 IF PT(ST) < 0 THEN 6200: REM FAILURE CONDITION

6100 REM --- GAME WIN CASE ---
6100 PRINT "C'EST UN SUCCES !":PRINT
6110 PRINT "TU PEUX MAINTENANT ALLER FAIRE AUTRE CHOSE, OU CONTINUER."
6199 GOTO 6300: REM SKIP FAILURE CASE

6200 REM --- GAME DEFEAT CASE ---
6210 PRINT "C'EST UN ECHEC. ": PRINT
6220 PRINT "TU AS APPRIS, MINE DE RIEN. ALLER, ESSAYE ENCORE. TU PEUX LE FAIRE !"

6300 REM --- WAY TO NEXT GAME ---
6310 PRINT TAB(27)"(APPUYER SUR N'IMPORTE QUELLE TOUCHE POUR CONTINUER)";:GET A$
6330 GOTO 1000: REM NEXT GAME INIT



9999 END: REM === ALL SUBROUTINES SHOULD BE WRITTEN AFTER THIS POINT ===

10000 REM --- DISPLAY ROUTINES ---

10100 REM RESET TEXT UNDER PLOT ZONE
10110 HOME: REM CLEAR TEXT AND POSITION 
10120 VTAB 21: REM POSITION PRINT UNDER PLOT ZONE
10130 RETURN

10200 REM PRINT ENIGMA
10210 GOSUB 10100: REM RESET TEXT UNDER PLOT ZONE
10220 PRINT "PLUS QUE ";PM-PT(ST-1);" POINT A GAGNER POUR FINIR."
10230 PRINT
10240 PRINT R1;" ";OP$;" ";R2;" = ";UA$
10260 RETURN

10300 REM PLOT STATE
10310 HGR: REM CLEAR DISPLAY; HGR 280 BY 160, HGR2 WOULD BE 280 BY 192
10320 HCOLOR=3: REM  WHITE
10330 HPLOT 0,0 TO 279,0 TO 279,151 TO 0,151 TO 0,0 : REM FRAME DRAWING ZONE
10340 OO = (151-LP+WP)/2 
10350 HH = OO - WP
10360 HCOLOR=1: REM  GREEN
10370 HPLOT 0,WP*HH/PM TO 279,WP*HH/PM: REM UPPER GOAL
10380 HCOLOR=5: REM  ORANGE
10390 HPLOT 0,151-LP*HH/PM TO 279,151-LP*HH/PM: REM: REM LOWER PIT
10400 REM PLOT CURVE
10410 HCOLOR=6: REM BLUE
10440 FOR I = 1 TO ST
10450 HPLOT INT((I-1)*SW) , INT(OO-PT(I-1)*HH/PM) TO INT(I*SW) , INT(OO-PT(I)*HH/PM)
10460 NEXT I
10499 RETURN


10500 REM RIGHT ANSWER
10510 PRINT TAB(33);"BONNE REPONSE."
10520 PRINT "EFFECTIVEMENT:"
10530 RETURN

10600 REM WRONG ANSWER
10610 PRINT TAB(30);"PAS VRAIMENT ";UA$;", NON..."
10620 PRINT "LA BONNE REPONSE ETAIT:"
10630 RETURN

11000 REM --- INPUT PROCESSING ROUTINES ---

11100 REM SUBMIT ANSWER
11120 GOSUB 10100: REM CLEAR TEXT ZONE
11130 IF VAL(UA$) = CR THEN GOSUB 12500: REM BONNE REPONSE
11140 IF VAL(UA$) <> CR THEN GOSUB 12600: REM MAUVAISES REPONSE
11150 PRINT R1;" ";OP$;" ";R2;" = ";CR
11160 GOSUB 10300: REM PLOT NEW GAME STATE
11170 PRINT TAB(27)"(APPUYER SUR N'IMPORTE QUELLE TOUCHE POUR CONTINUER)";:GET A$
11180 IF ABS(PT(ST)) >= PM THEN 6000: REM GAME OVER
11190 GOSUB 12100: REM NEW ENIGMA
11199 RETURN 

11200 REM INVERT SIGN
11210 UA$ = STR$(-1 * VAL(UA$))
11240 GOSUB 10200
11250 RETURN

11300 REM TURN POSITIVE
11310 IF LEFT$(UA$,1) = "-" THEN UA$ = RIGHT$(UA$,LEN(UA$)-1)
11320 GOSUB 10200: REM RE-PRINT ENIGMA
11330 RETURN

11400 REM TURN NEGATIVE
11410 IF LEFT$(UA$,1) <> "-" THEN UA$ = "-" + UA$
11420 GOSUB 10200: REM RE-PRINT ENIGMA
11430 RETURN

11500 REM PLACE DECIMAL SEPARATOR
11510 NA$ = "": REM NEW ANSWER
11520 FOR I = 0 TO LEN(UA$)
11530 CH$ = MID$(UA$,I,1)
11540 IF CH$ <> "." THEN NA$ = NA$ + CH$
11550 NEXT I
11560 UA$ = NA$ + "."
11580 GOSUB 10200: REM RE-PRINT ENIGMA
11590 RETURN


11600 REM APPEND DIGIT TO CURRENT ANSWER
11610 UA$ = UA$ + STR$(K-176)
11620 GOSUB 10200: REM RE-PRINT ENIGMA
11630 RETURN

11700 REM REMOVE LAST CHAR FROM CURRENT ANSWER
11710 UA$ = LEFT$(UA$, LEN(UA$)-1)
11720 GOSUB 10200: REM RE-PRINT ENIGMA
11730 RETURN 


12000 REM --- GAME LOGIC ROUTINES ---

12100 REM NEW ENIGMA (WITH "A LA APPLE" FLOAT MISPRECISION UNFUCKING)
12110 IT = 10^DP
12120 R1 = INT(RND(1)*IT*(MA-MI)+MI)/IT
12130 R2 = INT(RND(1)*IT*(MA-MI)+MI)/IT
12140 IF OP$ = "+" THEN CR=(R1*IT+R2*IT)/IT: GOTO 12400: REM SKIP DIVISION
12150 IF OP$ = "-" THEN CR=(R1*IT-R2*IT)/IT: GOTO 12400: REM SKIP DIVISION
12160 IF OP$ = "x" THEN CR=((R1*IT)*(R2*IT))/(IT*IT): GOTO 12400: REM SKIP DIVISION
12200 REM DIVISION
12210 V1 = INT(RND(1)*IT*(MA-MI)+MI): REM INTEGER NUMERATOR
12220 V2 = INT(RND(1)*IT*(MA-MI)+MI): IF V2 = 0 THEN 12210: REM NON-ZERO
12230 VR = INT(V1/V2): REM ROUNDED INTEGER RESULT WITH
12240 V1 = V2 * VR: REM CORRECTED INTEGER NUMERATOR
12250 CR = INT((0.5/IT)+V1/V2)
12260 R1 = V1/IT
12270 R2 = V2/IT
12400 REM ROUND RESET
12410 UA$ = ""
12420 ST = ST + 1: REM THIS IS A NEW STEP
12430 GOSUB 10200: REM PRINT ENIGMA
12440 RETURN

12500 REM BONNE REPONSE
12510 AG = AG + 1
12520 PT(ST) = PT(ST-1) + WP
12530 GOSUB 10500: REM PRINT SUCCESS MESSAGE
12540 RETURN

12600 REM MAUVAISE REPONSE
12610 AW = AW + 1
12620 PT(ST) = PT(ST-1) - LP
12630 GOSUB 10600: REM PRINT FAILURE MESSAGE
12640 RETURN